# Check `docs/pipeline.md` to get info about this file
groups:
  - name: master
    jobs:
      - build-master
      - test-master
  - name: pull-requests
    jobs:
      - build-pull-request
      - test-pull-request
  - name: deploy
    jobs:
      - deploy-master

resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest

  - name: pull-request
    type: docker-image
    source:
      repository: jtarchie/pr

resources:
  - name: repository
    type: git
    source:
      uri: git@github.com:rubykube/peatio.git
      branch: master
      private_key: ((git_private_key))

  - name: pull-request
    type: pull-request
    source:
      access_token: ((github_token))
      base: master
      private_key: ((git_private_key))
      repo: rubykube/peatio
      uri: git@github.com:rubykube/peatio.git

  - name: image
    type: docker-image
    source:
      repository: gcr.io/helios-devel/peatio
      username: _json_key
      password: ((gcr_password))

  - name: slack-alert
    type: slack-notification
    source:
      url: https://hooks.slack.com/services/((slack_webhook))

jobs:
  - name: build-pull-request
    plan:
      - get: pull-request
        trigger: true
      - put: slack-alert
        params:
          channel: '#ci-alerts'
          text: |
            New PR was created! :thumbsup_all:
            Now building image to run tests.
            Check it out at:
            $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
            or at:
            $ATC_EXTERNAL_URL/builds/$BUILD_ID
            see on github:
            `cat pull-request/.git/url`
      - task: tag
        file: pull-request/config/pipelines/tasks/create-tag.yml
        params: { type: pull }
        input_mapping: { repo: pull-request }
      - aggregate:
        - put: image
          params:
            cache: true
            cache_tag: latest
            build: pull-request
            tag: tag/name
        - put: pull-request
          params:
            path: pull-request
            status: pending
        - put: slack-alert
          params:
            channel: '#ci-alerts'
            text: |
              peatio PR image was built! :thumbsup_all:
              Check it out at:
              $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
              or at:
              $ATC_EXTERNAL_URL/builds/$BUILD_ID
              see on github:
              `cat pull-request/.git/url`

  - name: test-pull-request
    serial: true
    plan:
      - aggregate:
        - get: pull-request
          passed: [build-pull-request]
          trigger: true
        - get: image
          passed: [build-pull-request]
          trigger: true
        - get: repository # use tasks from master branch
      - task: run-tests
        image: image
        params:
          DATABASE_HOST: localhost
          DATABASE_USER: root
          DATABASE_PASS: changeme
          REDIS_URL: redis://user:password@redis:6379
          CHROME_HOSTNAME: localhost
        file: repository/config/pipelines/tasks/run-tests.yml
        on_success:
          aggregate:
            - put: pull-request
              params:
                path: pull-request
                status: success
            - put: slack-alert
              params:
                channel: '#ci-alerts'
                text: |
                  peatio PR tests have passed! :thumbsup_all:
                  Check it out at:
                  $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
                  or at:
                  $ATC_EXTERNAL_URL/builds/$BUILD_ID
                  see on github:
                  `cat pull-request/.git/url`
        on_failure:
          aggregate:
            - put: pull-request
              params:
                path: pull-request
                status: failure
            - put: slack-alert
              params:
                channel: '#ci-alerts'
                text: |
                  peatio PR tests have failed! :thumbsdown_all:
                  Check it out at:
                  $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
                  or at:
                  $ATC_EXTERNAL_URL/builds/$BUILD_ID
                  see on github:
                  `cat pull-request/.git/url`

  - name: build-master
    serial: true
    plan:
      - get: repository
        trigger: true
      - task: tag
        file: repository/config/pipelines/tasks/create-tag.yml
        params: { type: master }
        input_mapping: { repo: repository }
      - put: image
        params:
          build: repository
          cache: true
          cache_tag: latest
          tag: tag/name
          tag_as_latest: true # to use as cache for the next build
        on_success:
          put: slack-alert
          params:
            channel: '#ci-alerts'
            text: |
              Peatio master branch was built and pushed.
              Check it out at:
              $ATC_EXTERNAL_URL/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
              or at:
              $ATC_EXTERNAL_URL/builds/$BUILD_ID
        on_failure:
          put: slack-alert
          params:
            channel: '#ci-alerts'
            text: |
              Peatio master branch build failed!
              Check it out at:
              $ATC_EXTERNAL_URL/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
              or at:
              $ATC_EXTERNAL_URL/builds/$BUILD_ID

  - name: test-master
    serial: true
    plan:
      - aggregate:
        - get: repository
          passed: [build-master]
          trigger: true
        - get: image
          passed: [build-master]
          trigger: true
      - task: run-tests
        image: image
        params:
          DATABASE_HOST: localhost
          DATABASE_USER: root
          DATABASE_PASS: changeme
          REDIS_URL: redis://user:password@redis:6379
          CHROME_HOSTNAME: localhost
        file: repository/config/pipelines/tasks/run-tests.yml
        on_success:
          put: slack-alert
          params:
            channel: '#ci-alerts'
            text: |
              peatio master tests have passed! :thumbsup_all:
              Check it out at:
              $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
              or at:
              $ATC_EXTERNAL_URL/builds/$BUILD_ID
        on_failure:
          put: slack-alert
          params:
            channel: '#ci-alerts'
            text: |
              peatio master tests have failed! :thumbsdown_all:
              Check it out at:
              $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
              or at:
              $ATC_EXTERNAL_URL/builds/$BUILD_ID

  - name: deploy-master
    serial: true
    plan:
      - aggregate:
        - get: repository
        - get: image
      - task: helm-deploy
        file: repository/config/pipelines/tasks/helm-deploy.yml
        params:
          GOOGLE_APPLICATION_JSON: ((gcr_password))
          KUBECONFIG_FILE: ((kubeconfig))
        on_success:
          put: slack-alert
          params:
            channel: '#ci-alerts'
            text: |
              peatio deployment has succeeded! :thumbsup_all:
              Check it out at:
              $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
              or at:
              $ATC_EXTERNAL_URL/builds/$BUILD_ID
